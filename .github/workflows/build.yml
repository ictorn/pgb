name: build image
on:
  release:
    types: [ published ]

permissions:
  contents: read
  packages: write

jobs:
  build-x86_64:
    timeout-minutes: 30
    runs-on: ubuntu-24.04
    name: build and push image for x86_64
    steps:
    - uses: actions/checkout@v4
    - uses: docker/login-action@v3
      name: login to ghcr.io
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/build-push-action@v6
      with:
        push: true
        context: .
        build-args: |
          ARCH=x86_64
        platforms: linux/amd64
        tags: ghcr.io/${{ github.repository }}:${{ github.event.release.name }}-x86_64

  build-aarch64:
    timeout-minutes: 30
    runs-on: ubuntu-24.04-arm
    name: build and push image for ARM
    steps:
    - uses: actions/checkout@v4
    - uses: docker/login-action@v3
      name: login to ghcr.io
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/build-push-action@v6
      with:
        push: true
        context: .
        build-args: |
          ARCH=aarch64
        platforms: linux/arm64
        tags: ghcr.io/${{ github.repository }}:${{ github.event.release.name }}-aarch64

  manifest:
    concurrency:
      group: final
      cancel-in-progress: true
    needs:
    - build-x86_64
    - build-aarch64
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    name: merge images
    steps:
    - name: get metadata
      id: meta
      uses: docker/metadata-action@v5
      env:
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      with:
        images: ghcr.io/${{ github.repository }}:${{ github.event.release.name }}-x86_64
    - name: set up docker buildx
      uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      name: login to ghcr.io
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: create and push new manifest
      run: |
        docker buildx imagetools create \
          --annotation "index,manifest:org.opencontainers.image.source=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }}" \
          --annotation "index,manifest:org.opencontainers.image.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}" \
          --annotation "index,manifest:org.opencontainers.image.licenses=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.licenses'] }}" \
          --annotation "index,manifest:org.opencontainers.image.authors=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.authors'] }}" \
          -t ghcr.io/${{ github.repository }}:${{ github.event.release.name }} \
          -t ghcr.io/${{ github.repository }}:latest \
          ghcr.io/${{ github.repository }}:${{ github.event.release.name }}-x86_64 \
          ghcr.io/${{ github.repository }}:${{ github.event.release.name }}-aarch64
