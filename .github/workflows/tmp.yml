name: TMP
on: workflow_dispatch

permissions:
  contents: read
  packages: write

env:
  GHCR_IMAGE: ghcr.io/${{ github.repository }}:test
  DH_IMAGE: ictorn/pgb:test

jobs:
  build:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
        - platform: linux/amd64
          image: ubuntu-24.04
          arch: x86_64
        - platform: linux/arm64
          image: ubuntu-24.04-arm
          arch: aarch64
    runs-on: ${{ matrix.image }}
    timeout-minutes: 30
    name: create images
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.GHCR_IMAGE }}
      - name: login to DH
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DH_USER }}
          password: ${{ secrets.DH_TOKEN }}
      - name: login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build and push images
        uses: docker/build-push-action@v6
        id: build
        with:
          push: true
          context: .
          file: Dockerfile.test
          build-args: |
            ARCH=${{ matrix.arch }}
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.DH_IMAGE }}-${{ matrix.arch }}
            ${{ env.GHCR_IMAGE }}-${{ matrix.arch }}
          annotations: |
            org.opencontainers.image.source=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }}
            org.opencontainers.image.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}
  
  merge:
    runs-on: ubuntu-24.04
    needs:
    - build
    steps:
    - uses: docker/setup-buildx-action@v3
    - uses: docker/metadata-action@v5
      id: meta
      with:
        images: ${{ env.REGISTRY_IMAGE }}
    - name: login to DH
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DH_USER }}
        password: ${{ secrets.DH_TOKEN }}
    - name: create shared manifest for DH
      run: |
        docker buildx imagetools create \
          --annotation "index:org.opencontainers.image.source=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }}" \
          --annotation "index:org.opencontainers.image.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}" \
          -t ${{ env.DH_IMAGE }}:test \
          ${{ env.GHCR_IDH_IMAGEMAGE }}:test-x86_64
          ${{ env.DH_IMAGE }}:test-aarch64
    - name: login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: create shared manifest for GHCR
      run: |
        docker buildx imagetools create \
          --annotation "index:org.opencontainers.image.source=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }}" \
          --annotation "index:org.opencontainers.image.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}" \
          -t ${{ env.GHCR_IMAGE }}:test \
          ${{ env.GHCR_IMAGE }}:test-x86_64
          ${{ env.GHCR_IMAGE }}:test-aarch64
